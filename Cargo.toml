[profile.dev.package]
backtrace = { opt-level = 3 }
num-bigint-dig = { opt-level = 3 }

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
codegen-units = 1
lto = true
strip = true

[profile.dist-smol]
inherits = "dist"
opt-level = "z"

[profile.release]
panic = "abort"

[workspace]
members = [
    "crates/kitsune-activitypub",
    "crates/kitsune-cache",
    "crates/kitsune-captcha",
    "crates/kitsune-config",
    "crates/kitsune-core",
    "crates/kitsune-db",
    "crates/kitsune-derive",
    "crates/kitsune-derive/impl",
    "crates/kitsune-email",
    "crates/kitsune-embed",
    "crates/kitsune-error",
    "crates/kitsune-federation",
    "crates/kitsune-federation-filter",
    "crates/kitsune-http-client",
    "crates/kitsune-jobs",
    "crates/kitsune-language",
    "crates/kitsune-mastodon",
    "crates/kitsune-observability",
    "crates/kitsune-oidc",
    "crates/kitsune-s3",
    "crates/kitsune-search",
    "crates/kitsune-service",
    "crates/kitsune-storage",
    "crates/kitsune-test",
    "crates/kitsune-type",
    "crates/kitsune-url",
    "crates/kitsune-util",
    "crates/kitsune-wasm-mrf",
    "crates/kitsune-wasm-mrf/example-mrf",
    "crates/kitsune-wasm-mrf/tests/http-client",
    "crates/kitsune-webfinger",

    "kitsune",
    "kitsune-cli",
    "kitsune-job-runner",

    "lib/athena",
    "lib/blowocking",
    "lib/cursiv",
    "lib/fast-cjson",
    "lib/geomjeungja",
    "lib/http-signatures",
    "lib/http-signatures-cli",
    "lib/just-retry",
    "lib/masto-id-convert",
    "lib/mrf-manifest",
    "lib/mrf-tool",
    "lib/post-process",
    "lib/schaber",
    "lib/speedy-uuid",
    "lib/tick-tock-mock",
    "lib/tower-http-digest",
    "lib/tower-stop-using-brave",
    "lib/tower-x-clacks-overhead",
    "lib/trials",

    "xtask",
]
resolver = "2"

[workspace.dependencies]
async-graphql = { version = "7.0.11", default-features = false, features = [
    "graphiql",
    "tempfile",
    "time",
    "tracing",
    "uuid",
] }
asynk-strim = "0.1.2"
async-trait = "0.1.83"
base64-simd = "0.8.0"
bytes = "1.9.0"
clap = { version = "4.5.21", features = ["derive", "wrap_help"] }
color-eyre = "0.6.3"
diesel = { version = "2.2.5", default-features = false, features = [
    "32-column-tables",
    "postgres_backend",
    "uuid",
    "with-deprecated",
] }
diesel-async = { version = "0.5.2", features = [
    "async-connection-wrapper",
    "bb8",
    "postgres",
    "tokio",
] }
diesel_full_text_search = { version = "2.2.0", default-features = false }
eyre = "0.6.12"
fred = { version = "10.0.0", features = [
    "enable-rustls-ring",
    "full-tracing",
    "i-scripts",
    "sha-1",
    "unix-sockets",
] }
futures-util = { version = "0.3.31", default-features = false, features = [
    "alloc",
] }
garde = { version = "0.20.0", features = [
    "derive",
    "email",
    "email-idna",
    "regex",
    "serde",
] }
hickory-resolver = { version = "0.25.0-alpha.4", default-features = false, features = [
    "dns-over-rustls",
    "native-certs",
    "tokio-runtime",
] }
http = "1.1.0"
iso8601-timestamp = "0.3.1"
itertools = { version = "0.13.0", default-features = false }
minijinja = { version = "2.5.0", features = ["loader"] }
moka = { version = "=0.12.7", features = ["sync"] }
rand = "0.8.5"
sailfish = { version = "0.9.0", default-features = false, features = [
    "derive",
    "perf-inline",
] }
serde = { version = "1.0.215", features = ["derive"] }
simdutf8 = { version = "0.1.5", features = ["aarch64_neon"] }
smol_str = { version = "0.3.2", features = ["serde"] }
sonic-rs = "=0.3.14"
strum = { version = "0.26.3", features = ["derive"] }
thiserror = "2.0.3"
tokio = { version = "1.41.1", features = ["full"] }
tower-http = { version = "0.6.2", features = [
    "catch-panic",
    "cors",

    # Explicitly exclude `zstd`
    # It's not widely adopted and takes a long time to build
    "decompression-br",
    "decompression-deflate",
    "decompression-gzip",

    "follow-redirect",
    "fs",
    "map-response-body",
    "request-id",
    "timeout",
    "timeout",
    "trace",
] }
tracing = "0.1.41"
triomphe = { version = "0.1.14", default-features = false, features = [
    "arc-swap",
    "unsize",
] }
typed-builder = "0.20.0"
url = "2.5.4"
uuid = { version = "1.11.0", features = ["fast-rng", "v7"] }

# Local workspace dependencies (crate directory)
kitsune-activitypub = { path = "crates/kitsune-activitypub" }
kitsune-cache = { path = "crates/kitsune-cache" }
kitsune-captcha = { path = "crates/kitsune-captcha" }
kitsune-config = { path = "crates/kitsune-config" }
kitsune-core = { path = "crates/kitsune-core" }
kitsune-db = { path = "crates/kitsune-db" }
kitsune-derive = { path = "crates/kitsune-derive" }
kitsune-email = { path = "crates/kitsune-email" }
kitsune-embed = { path = "crates/kitsune-embed" }
kitsune-error = { path = "crates/kitsune-error" }
kitsune-federation = { path = "crates/kitsune-federation" }
kitsune-federation-filter = { path = "crates/kitsune-federation-filter" }
kitsune-http-client = { path = "crates/kitsune-http-client" }
kitsune-jobs = { path = "crates/kitsune-jobs" }
kitsune-language = { path = "crates/kitsune-language" }
kitsune-mastodon = { path = "crates/kitsune-mastodon" }
kitsune-observability = { path = "crates/kitsune-observability" }
kitsune-oidc = { path = "crates/kitsune-oidc" }
kitsune-s3 = { path = "crates/kitsune-s3" }
kitsune-scss-compiler = { path = "crates/kitsune-scss-compiler" }
kitsune-search = { path = "crates/kitsune-search" }
kitsune-service = { path = "crates/kitsune-service" }
kitsune-storage = { path = "crates/kitsune-storage" }
kitsune-test = { path = "crates/kitsune-test" }
kitsune-type = { path = "crates/kitsune-type" }
kitsune-url = { path = "crates/kitsune-url" }
kitsune-util = { path = "crates/kitsune-util" }
kitsune-wasm-mrf = { path = "crates/kitsune-wasm-mrf" }
kitsune-webfinger = { path = "crates/kitsune-webfinger" }
kitsune = { path = "kitsune" }
kitsune-job-runner = { path = "kitsune-job-runner" }

# Local workspace dependences (lib directory)
athena = { path = "lib/athena", features = ["redis"] }
blowocking = { path = "lib/blowocking", default-features = false }
cursiv = { path = "lib/cursiv", features = ["axum"] }
fast-cjson = { path = "lib/fast-cjson" }
geomjeungja = { path = "lib/geomjeungja" }
http-signatures = { path = "lib/http-signatures" }
just-retry = { path = "lib/just-retry" }
masto-id-convert = { path = "lib/masto-id-convert" }
mrf-manifest = { path = "lib/mrf-manifest" }
post-process = { path = "lib/post-process" }
schaber = { path = "lib/schaber" }
speedy-uuid = { path = "lib/speedy-uuid", features = [
    "diesel",
    "redis",
    "serde",
] }
tick-tock-mock = { path = "lib/tick-tock-mock" }
tower-http-digest = { path = "lib/tower-http-digest" }
tower-stop-using-brave = { path = "lib/tower-stop-using-brave" }
tower-x-clacks-overhead = { path = "lib/tower-x-clacks-overhead" }
trials = { path = "lib/trials" }

[workspace.lints.clippy]
all = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }

cast_lossless = "allow"
cast_possible_truncation = "allow"
cast_possible_wrap = "allow"
cast_sign_loss = "allow"
module_name_repetitions = "allow"
missing_errors_doc = "allow"
missing_panics_doc = "allow"
needless_return = "allow"
no_effect_underscore_binding = "allow"

[workspace.lints.rust]
forbidden_lint_groups = "allow"
rust_2018_idioms = { level = "forbid", priority = -1 }
unsafe_code = "deny"

[workspace.package]
authors = ["The Kitsune authors"]
edition = "2021"
version = "0.0.1-pre.6"
license = "AGPL-3.0-or-later"

[patch.crates-io]
# Fix unmaintained advisory
notify-types = { git = "https://github.com/notify-rs/notify.git", rev = "aacd41642345cb66b327d4eb2cdc15ba4016daaa" }
# SIMD runtime detection and generic I/O wrapper
sonic-rs = { git = "https://github.com/aumetra/sonic-rs.git", rev = "12df930a57ff9f07eb16111a3da1feff3dc8e5ad" }
