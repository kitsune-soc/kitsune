[profile.dev.package]
backtrace = { opt-level = 3 }
num-bigint-dig = { opt-level = 3 }
taplo = { debug-assertions = false } # A debug assertion will make the xtask panic with too long trailing comments

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
codegen-units = 1
lto = true
strip = true

[profile.dist-smol]
inherits = "dist"
opt-level = "z"

[profile.release]
panic = "abort"

[workspace]
members = [
    "crates/kitsune-activitypub",
    "crates/kitsune-cache",
    "crates/kitsune-captcha",
    "crates/kitsune-config",
    "crates/kitsune-core",
    "crates/kitsune-db",
    "crates/kitsune-derive",
    "crates/kitsune-derive/impl",
    "crates/kitsune-email",
    "crates/kitsune-embed",
    "crates/kitsune-error",
    "crates/kitsune-federation",
    "crates/kitsune-federation-filter",
    "crates/kitsune-http-client",
    "crates/kitsune-jobs",
    "crates/kitsune-language",
    "crates/kitsune-mastodon",
    "crates/kitsune-observability",
    "crates/kitsune-oidc",
    "crates/kitsune-s3",
    "crates/kitsune-scss-compiler",
    "crates/kitsune-search",
    "crates/kitsune-service",
    "crates/kitsune-storage",
    "crates/kitsune-test",
    "crates/kitsune-type",
    "crates/kitsune-url",
    "crates/kitsune-util",
    "crates/kitsune-wasm-mrf",
    "crates/kitsune-wasm-mrf/example-mrf",
    "crates/kitsune-webfinger",
    "kitsune",
    "kitsune-cli",
    "kitsune-job-runner",
    "lib/athena",
    "lib/blowocking",
    "lib/cursiv",
    "lib/geomjeungja",
    "lib/http-signatures",
    "lib/just-retry",
    "lib/masto-id-convert",
    "lib/mrf-manifest",
    "lib/mrf-tool",
    "lib/post-process",
    "lib/speedy-uuid",
    "lib/tick-tock-mock",
    "lib/tower-http-digest",
    "lib/tower-stop-using-brave",
    "lib/tower-x-clacks-overhead",
    "lib/trials",
    "lib/trials/macros",
    "xtask",
]
resolver = "2"

[workspace.dependencies]
askama = { version = "0.12.1", default-features = false, features = [
    "with-axum",
] }
clap = { version = "4.5.4", features = ["derive", "wrap_help"] }
diesel = { version = "2.1.6", default-features = false, features = [
    "32-column-tables",
    "with-deprecated",
] }
diesel-async = { version = "0.4.1", features = [
    "async-connection-wrapper",
    "bb8",
    "postgres",
    "tokio",
] }
diesel_full_text_search = { version = "2.1.1", default-features = false }
fred = { version = "9.0.3", features = [
    "enable-rustls-ring",
    "full-tracing",
    "i-scripts",
    "sha-1",
] }
garde = { version = "0.18.0", default-features = false, features = [
    "derive",
    "email",
    "email-idna",
    "regex",
    "serde",
] }
itertools = { version = "0.13.0", default-features = false }
moka = { version = "0.12.7", features = ["sync"] }
simdutf8 = { version = "0.1.4", features = ["aarch64_neon"] }
sonic-rs = "0.3.6"
triomphe = { version = "0.1.11", default-features = false, features = [
    "unsize",
] }

# Local workspace dependencies (crate directory)
kitsune-activitypub = { path = "crates/kitsune-activitypub" }
kitsune-cache = { path = "crates/kitsune-cache" }
kitsune-captcha = { path = "crates/kitsune-captcha" }
kitsune-config = { path = "crates/kitsune-config" }
kitsune-core = { path = "crates/kitsune-core" }
kitsune-db = { path = "crates/kitsune-db" }
kitsune-derive = { path = "crates/kitsune-derive" }
kitsune-email = { path = "crates/kitsune-email" }
kitsune-embed = { path = "crates/kitsune-embed" }
kitsune-error = { path = "crates/kitsune-error" }
kitsune-federation = { path = "crates/kitsune-federation" }
kitsune-federation-filter = { path = "crates/kitsune-federation-filter" }
kitsune-http-client = { path = "crates/kitsune-http-client" }
kitsune-jobs = { path = "crates/kitsune-jobs" }
kitsune-language = { path = "crates/kitsune-language" }
kitsune-mastodon = { path = "crates/kitsune-mastodon" }
kitsune-observability = { path = "crates/kitsune-observability" }
kitsune-oidc = { path = "crates/kitsune-oidc" }
kitsune-s3 = { path = "crates/kitsune-s3" }
kitsune-scss-compiler = { path = "crates/kitsune-scss-compiler" }
kitsune-search = { path = "crates/kitsune-search" }
kitsune-service = { path = "crates/kitsune-service" }
kitsune-storage = { path = "crates/kitsune-storage" }
kitsune-test = { path = "crates/kitsune-test" }
kitsune-type = { path = "crates/kitsune-type" }
kitsune-url = { path = "crates/kitsune-url" }
kitsune-util = { path = "crates/kitsune-util" }
kitsune-wasm-mrf = { path = "crates/kitsune-wasm-mrf" }
kitsune-webfinger = { path = "crates/kitsune-webfinger" }
kitsune = { path = "kitsune" }
kitsune-job-runner = { path = "kitsune-job-runner" }

# Local workspace dependences (lib directory)
athena = { path = "lib/athena", features = ["redis"] }
blowocking = { path = "lib/blowocking", default-features = false }
cursiv = { path = "lib/cursiv" }
geomjeungja = { path = "lib/geomjeungja" }
http-signatures = { path = "lib/http-signatures" }
just-retry = { path = "lib/just-retry" }
masto-id-convert = { path = "lib/masto-id-convert" }
mrf-manifest = { path = "lib/mrf-manifest" }
post-process = { path = "lib/post-process" }
speedy-uuid = { path = "lib/speedy-uuid", features = ["serde"] }
tick-tock-mock = { path = "lib/tick-tock-mock" }
tower-http-digest = { path = "lib/tower-http-digest" }
tower-stop-using-brave = { path = "lib/tower-stop-using-brave" }
tower-x-clacks-overhead = { path = "lib/tower-x-clacks-overhead" }
trials = { path = "lib/trials" }

[workspace.lints.clippy]
all = "warn"
pedantic = "warn"

cast_lossless = "allow"
cast_possible_truncation = "allow"
cast_possible_wrap = "allow"
cast_sign_loss = "allow"
module_name_repetitions = "allow"
missing_errors_doc = "allow"
missing_panics_doc = "allow"
no_effect_underscore_binding = "allow"

[workspace.lints.rust]
forbidden_lint_groups = "allow"
rust_2018_idioms = "forbid"
unsafe_code = "deny"

[workspace.package]
authors = ["The Kitsune authors"]
edition = "2021"
version = "0.0.1-pre.6"
license = "AGPL-3.0-or-later"

# Config for 'cargo dist'
[workspace.metadata.dist]
# Whether to pass --all-features to cargo build
all-features = true
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.13.2"
# CI backends to support
ci = ["github"]
# The installers to generate for each app
installers = ["powershell", "shell"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = [
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "x86_64-pc-windows-msvc",
    "x86_64-unknown-linux-gnu",
]
# Publish jobs to run in CI
pr-run-mode = "plan"
# Whether to install an updater program
install-updater = true

[patch.crates-io]
diesel-async = { git = "https://github.com/weiznich/diesel_async.git", rev = "d02798c67065d763154d7272dd0c09b39757d0f2" }
scraper = { git = "https://github.com/causal-agent/scraper.git", rev = "d67111f5cc0b7da6e6ff10e4549d87cf09ba3e5b" }
tokio-postgres-rustls = { git = "https://github.com/jbg/tokio-postgres-rustls.git", rev = "b16c1bc0f5d4f91324174fd1bd839d743a70f86a" }

# SIMD runtime detection
sonic-rs = { git = "https://github.com/aumetra/sonic-rs.git", rev = "d1f172d75e7c9386fde169673d2666e0cfd5d32c" }

# TCP nodelay for `axum::serve`
axum = { git = "https://github.com/tokio-rs/axum.git", rev = "8d0c5c05eb75eb779591c8000705e785123868a0" }
axum-core = { git = "https://github.com/tokio-rs/axum.git", rev = "8d0c5c05eb75eb779591c8000705e785123868a0" }

# Patch to make OpenTelemetry with with hyper 1
opentelemetry = { git = "https://github.com/open-telemetry/opentelemetry-rust.git", rev = "40fb924215c84d6e3818351b2c0e3d2ba01a7db9" }
opentelemetry-http = { git = "https://github.com/open-telemetry/opentelemetry-rust.git", rev = "40fb924215c84d6e3818351b2c0e3d2ba01a7db9" }
opentelemetry-otlp = { git = "https://github.com/open-telemetry/opentelemetry-rust.git", rev = "40fb924215c84d6e3818351b2c0e3d2ba01a7db9" }
opentelemetry_sdk = { git = "https://github.com/open-telemetry/opentelemetry-rust.git", rev = "40fb924215c84d6e3818351b2c0e3d2ba01a7db9" }
tonic = { git = "https://github.com/hyperium/tonic.git", rev = "a90adf27ef389a9c9d891c3f5696e6245589c479" }
tracing-opentelemetry = { git = "https://github.com/aumetra/tracing-opentelemetry.git", rev = "e6e16057f6e3b2a11f6f8e7c86a1c17e4f7a07f1" }
