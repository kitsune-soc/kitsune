[profile.dev.package]
backtrace = { opt-level = 3 }
num-bigint-dig = { opt-level = 3 }

[profile.bench]
inherits = "dist"

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
codegen-units = 1
lto = true
strip = true

[profile.dist-smol]
inherits = "dist"
opt-level = "z"

[profile.release]
panic = "abort"

[workspace]
members = [
    "crates/kitsune-activitypub",
    "crates/kitsune-cache",
    "crates/kitsune-captcha",
    "crates/kitsune-config",
    "crates/kitsune-core",
    "crates/kitsune-db",
    "crates/kitsune-derive",
    "crates/kitsune-derive/impl",
    "crates/kitsune-email",
    "crates/kitsune-embed",
    "crates/kitsune-error",
    "crates/kitsune-federation",
    "crates/kitsune-federation-filter",
    "crates/kitsune-http-client",
    "crates/kitsune-jobs",
    "crates/kitsune-language",
    "crates/kitsune-mastodon",
    "crates/kitsune-observability",
    "crates/kitsune-oidc",
    "crates/kitsune-s3",
    "crates/kitsune-search",
    "crates/kitsune-service",
    "crates/kitsune-storage",
    "crates/kitsune-test",
    "crates/kitsune-type",
    "crates/kitsune-url",
    "crates/kitsune-util",
    "crates/kitsune-wasm-mrf",
    "crates/kitsune-wasm-mrf/example-mrf",
    "crates/kitsune-wasm-mrf/tests/http-client",
    "crates/kitsune-webfinger",

    "kitsune",
    "kitsune-cli",
    "kitsune-job-runner",

    "lib/athena",
    "lib/blowocking",
    "lib/cowstr",
    "lib/cursiv",
    "lib/fast-cjson",
    "lib/flashy",
    "lib/geomjeungja",
    "lib/http-signatures",
    "lib/http-signatures-cli",
    "lib/just-retry",
    "lib/komainu",
    "lib/masto-id-convert",
    "lib/mrf-manifest",
    "lib/mrf-tool",
    "lib/post-process",
    "lib/schaber",
    "lib/speedy-uuid",
    "lib/tick-tock-mock",
    "lib/tower-http-digest",
    "lib/tower-stop-using-brave",
    "lib/tower-x-clacks-overhead",
    "lib/trials",

    "xtask",
]
resolver = "2"

[workspace.dependencies]
ahash = "0.8.11"
aliri_braid = "0.4.0"
arc-swap = "1.7.1"
argh = "0.1.13"
argon2 = { version = "0.5.3", features = ["std"] }
async-graphql = { version = "7.0.15", default-features = false, features = [
    "altair",
    "tempfile",
    "time",
    "tracing",
    "uuid",
] }
async-graphql-axum = "7.0.15"
async-trait = "0.1.86"
asynk-strim = "0.1.2"
axum = { version = "0.8.1", features = ["macros", "multipart"] }
axum-core = "0.5.0"
axum-extra = { version = "0.10.0", features = [
    "cookie",
    "cookie-signed",
    "query",
    "typed-header",
] }
base64-simd = "0.8.0"
blake3 = "1.5.5"
bubble-bath = "0.2.1"
bytes = "1.10.0"
clap = { version = "4.5.29", features = ["derive", "wrap_help"] }
color-eyre = "0.6.3"
colored_json = "5.0.0"
compact_str = { version = "0.8.1", features = ["serde"] }
const_format = "0.2.34"
const-oid = { version = "0.9.6", features = ["db"] }
cookie = { version = "0.18.1", features = ["percent-encode"] }
derive_builder = "0.20.2"
derive_more = { version = "2.0.1", features = ["from"] }
diesel = { version = "2.2.7", default-features = false, features = [
    "32-column-tables",
    "postgres_backend",
    "uuid",
    "with-deprecated",
] }
diesel-async = { version = "0.5.2", features = [
    "async-connection-wrapper",
    "bb8",
    "postgres",
    "tokio",
] }
diesel_full_text_search = { version = "2.2.0", default-features = false }
diesel_migrations = "2.2.0"
divan = "0.1.17"
dotenvy = "0.15.7"
either = { version = "1.13.0", default-features = false }
enum_dispatch = "0.3.13"
envy = "0.4.2"
eyre = "0.6.12"
fastrand = "2.3.0"
fred = { version = "10.0.4", features = [
    "enable-rustls-ring",
    "full-tracing",
    "i-scripts",
    "sha-1",
    "unix-sockets",
] }
futures-executor = "0.3.31"
futures-test = "0.3.31"
futures-util = { version = "0.3.31", default-features = false, features = [
    "alloc",
] }
garde = { version = "0.22.0", features = [
    "derive",
    "email",
    "email-idna",
    "regex",
    "serde",
] }
git-version = "0.3.9"
globset = "0.4.15"
headers = "0.4.0"
hex-simd = "0.8.0"
hickory-resolver = { version = "0.25.0-alpha.5", default-features = false, features = [
    "dns-over-rustls",
    "rustls-platform-verifier",
    "tokio-runtime",
] }
http = "1.2.0"
http-body = "1.0.1"
http-body-util = "0.1.2"
http-serde = "2.1.1"
httpdate = "1.0.3"
human-size = { version = "0.4.3", features = ["serde"] }
hyper = "1.6.0"
hyper-util = { version = "0.1.10", features = [
    "client-legacy",
    "http1",
    "http2",
    "tokio",
] }
hyper-rustls = { version = "0.27.5", default-features = false, features = [
    "http1",
    "http2",
    "logging",
    "native-tokio",
    "ring",
    "tls12",
] }
icu_normalizer = "1.5.0"
img-parts = "0.3.3"
indexmap = { version = "2.7.1", features = ["serde"] }
insta = { version = "1.42.1", default-features = false, features = [
    "glob",
    "json",
] }
iso8601-timestamp = { version = "0.3.3", features = ["diesel-pg"] }
isolang = { version = "2.4.0", features = [
    "english_names",
    "list_languages",
    "serde",
] }
itertools = { version = "0.14.0", default-features = false }
lantern-client-sdk = { package = "client-sdk", git = "https://github.com/Lantern-chat/client-sdk-rs.git", rev = "547922fb657f924ff595b78d38b17094fd25be21", default-features = false }
leb128 = "0.2.5"
lettre = { version = "0.11.12", default-features = false, features = [
    "builder",
    "hostname",
    "pool",
    "smtp-transport",
    "tokio1",
    "tokio1-rustls-tls",
    "tracing",
] }
lexical-parse-integer = { version = "1.0.5", default-features = false }
logos = "0.15.0"
lol_html = "2.2.0"
meilisearch-sdk = { version = "0.27.1", default-features = false }
memchr = "2.7.4"
miette = { version = "7.5.0", features = ["fancy"] }
mimalloc = "0.1.43"
mime = "0.3.17"
mime_guess = { version = "2.0.5", default-features = false }
minijinja = { version = "2.7.0", features = ["loader"] }
moka = { version = "0.12.10", features = ["sync"] }
mrml = { version = "4.0.1", default-features = false, features = [
    "parse",
    "render",
] }
notify-debouncer-full = "0.5.0"
num-derive = "0.4.2"
num-traits = "0.2.19"
oauth2 = { version = "5.0.0", default-features = false }
olpc-cjson = "0.1.4"
openidconnect = { version = "4.0.0", default-features = false, features = [
    # Accept these two, per specification invalid, cases to increase compatibility
    "accept-rfc3339-timestamps",
    "accept-string-booleans",
    "timing-resistant-secret-traits",
] }
opentelemetry = { version = "0.28.0", default-features = false, features = [
    "trace",
] }
opentelemetry-http = "0.28.0"
opentelemetry-otlp = { version = "0.28.0", default-features = false, features = [
    "grpc-tonic",
    "http-json",
    "http-proto",
    "tls",
    "tls-roots",
    "trace",
] }
opentelemetry_sdk = { version = "0.28.0", default-features = false, features = [
    "rt-tokio",
] }
owo-colors = { version = "4.1.0", features = ["supports-colors"] }
password-hash = { version = "0.5.0", features = ["std"] }
paste = "1.0.15"
pin-project-lite = "0.2.16"
pkcs8 = { version = "0.10.2", features = ["pem", "std"] }
postcard = { version = "1.1.1", default-features = false, features = ["alloc"] }
pretty_assertions = "1.4.1"
proc-macro2 = "1.0.93"
pulldown-cmark = { version = "0.13.0", default-features = false, features = [
    "html",
    "simd",
] }
quick-xml = { version = "0.37.2", features = ["serialize"] }
quote = "1.0.38"
rand = "=0.8.5"
rand_xorshift = "=0.3.0"
rayon = "1.10.0"
redb = { version = "2.4.0", features = ["logging"] }
regex = "1.11.1"
retry-policies = "0.4.0"
ring = { version = "0.17.9", features = ["std"] }
rsa = "0.9.7"
rstest = { version = "0.24.0", default-features = false }
rust-embed = { version = "8.5.0", features = ["include-exclude"] }
rustc-hash = "2.1.1"
rustls = { version = "0.23.23", default-features = false, features = [
    "logging",
    "ring",
    "std",
    "tls12",
] }
rustls-native-certs = "0.8.1"
rusty-s3 = "0.7.0"
sailfish = { version = "0.9.0", default-features = false, features = [
    "derive",
    "perf-inline",
] }
schemars = { version = "1.0.0-alpha.17", features = ["semver1"] }
scoped-futures = { version = "0.1.4", default-features = false }
semver = { version = "1.0.25", features = ["serde"] }
serde = { version = "1.0.217", features = ["derive"] }
serde_json = "1.0.138"
serde_test = "1.0.177"
serde_urlencoded = "0.7.1"
serde_with = { version = "3.12.0", default-features = false, features = [
    "alloc",
    "macros",
] }
sha2 = "0.10.8"
simdutf8 = { version = "0.1.5", features = ["aarch64_neon"] }
slab = "0.4.9"
smol_str = { version = "0.3.2", features = ["serde"] }
sonic-rs = "0.4.0-rc4"
strum = { version = "0.27.0", features = ["derive"] }
subtle = "2.6.1"
syn = { version = "2.0.98", features = ["full"] }
sync_wrapper = "1.0.2"
tempfile = "3.17.0"
thiserror = "2.0.11"
time = "0.3.37"
tokio = { version = "1.43.0", features = ["full"] }
tokio-postgres = "0.7.13"
tokio-postgres-rustls = "0.13.0"
tokio-util = { version = "0.7.13", features = ["io", "rt"] }
toml = { version = "0.8.20", default-features = false, features = ["parse"] }
tower = { version = "0.5.2", default-features = false, features = ["util"] }
tower-http = { version = "0.6.2", features = [
    "catch-panic",
    "cors",

    # Explicitly exclude `zstd`
    # It's not widely adopted and takes a long time to build
    "decompression-br",
    "decompression-deflate",
    "decompression-gzip",

    "follow-redirect",
    "fs",
    "map-response-body",
    "request-id",
    "timeout",
    "trace",
] }
tracing = "0.1.41"
tracing-error = "0.2.1"
tracing-opentelemetry = { version = "0.29.0", default-features = false }
tracing-subscriber = "0.3.19"
triomphe = { version = "0.1.14", default-features = false, features = [
    "arc-swap",
    "unsize",
] }
typed-builder = "0.20.0"
typetag = "0.2.19"
unsize = "1.1.0"
ureq = "3.0.5"
url = "2.5.4"
urlencoding = "2.1.3"
uuid = { version = "1.13.1", features = ["fast-rng", "v4", "v7"] }
uuid-simd = { version = "0.8.0", features = ["uuid"] }
walkdir = "2.5.0"
wasm-encoder = "0.225.0"
wasmparser = "0.225.0"
wasmtime = { version = "29.0.1", default-features = false, features = [
    "addr2line",
    "all-arch",
    "async",
    "component-model",
    "cranelift",
    "parallel-compilation",
    "pooling-allocator",
    "runtime",
] }
wasmtime-wasi = { version = "29.0.1", default-features = false }
wat = "1.225.0"
whatlang = "0.16.4"
whichlang = "0.1.1"
wit-bindgen = "0.39.0"
zeroize = { version = "1.8.1", features = ["derive"] }
zxcvbn = { version = "3.1.0", default-features = false }

# Local workspace dependencies (crate directory)
kitsune-activitypub = { path = "crates/kitsune-activitypub" }
kitsune-cache = { path = "crates/kitsune-cache" }
kitsune-captcha = { path = "crates/kitsune-captcha" }
kitsune-config = { path = "crates/kitsune-config" }
kitsune-core = { path = "crates/kitsune-core" }
kitsune-db = { path = "crates/kitsune-db" }
kitsune-derive = { path = "crates/kitsune-derive" }
kitsune-email = { path = "crates/kitsune-email" }
kitsune-embed = { path = "crates/kitsune-embed" }
kitsune-error = { path = "crates/kitsune-error" }
kitsune-federation = { path = "crates/kitsune-federation" }
kitsune-federation-filter = { path = "crates/kitsune-federation-filter" }
kitsune-http-client = { path = "crates/kitsune-http-client" }
kitsune-jobs = { path = "crates/kitsune-jobs" }
kitsune-language = { path = "crates/kitsune-language" }
kitsune-mastodon = { path = "crates/kitsune-mastodon" }
kitsune-observability = { path = "crates/kitsune-observability" }
kitsune-oidc = { path = "crates/kitsune-oidc" }
kitsune-s3 = { path = "crates/kitsune-s3" }
kitsune-search = { path = "crates/kitsune-search" }
kitsune-service = { path = "crates/kitsune-service" }
kitsune-storage = { path = "crates/kitsune-storage" }
kitsune-test = { path = "crates/kitsune-test" }
kitsune-type = { path = "crates/kitsune-type" }
kitsune-url = { path = "crates/kitsune-url" }
kitsune-util = { path = "crates/kitsune-util" }
kitsune-wasm-mrf = { path = "crates/kitsune-wasm-mrf" }
kitsune-webfinger = { path = "crates/kitsune-webfinger" }
kitsune-job-runner = { path = "kitsune-job-runner" }

# Local workspace dependences (lib directory)
athena = { path = "lib/athena", features = ["redis"] }
blowocking = { path = "lib/blowocking" }
cowstr = { path = "lib/cowstr" }
cursiv = { path = "lib/cursiv", features = ["axum"] }
fast-cjson = { path = "lib/fast-cjson" }
flashy = { path = "lib/flashy", features = ["axum"] }
http-signatures = { path = "lib/http-signatures" }
just-retry = { path = "lib/just-retry" }
komainu = { path = "lib/komainu" }
mrf-manifest = { path = "lib/mrf-manifest", features = [
    "decode",
    "encode",
    "serialise",
] }
post-process = { path = "lib/post-process" }
schaber = { path = "lib/schaber" }
speedy-uuid = { path = "lib/speedy-uuid", features = [
    "diesel",
    "redis",
    "serde",
] }
tick-tock-mock = { path = "lib/tick-tock-mock" }
tower-http-digest = { path = "lib/tower-http-digest" }
tower-stop-using-brave = { path = "lib/tower-stop-using-brave" }
tower-x-clacks-overhead = { path = "lib/tower-x-clacks-overhead" }
trials = { path = "lib/trials" }

[workspace.lints.clippy]
all = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }

cast_lossless = "allow"
cast_possible_truncation = "allow"
cast_possible_wrap = "allow"
cast_sign_loss = "allow"
module_name_repetitions = "allow"
missing_errors_doc = "allow"
missing_panics_doc = "allow"
needless_return = "allow"
no_effect_underscore_binding = "allow"

[workspace.lints.rust]
rust_2018_idioms = { level = "deny", priority = -1 }
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(coverage)'] }
unsafe_code = "deny"

[workspace.package]
authors = ["The Kitsune authors"]
edition = "2021"
version = "0.0.1-pre.6"
license = "AGPL-3.0-or-later"

[patch.crates-io]
sonic-rs = { git = "https://github.com/aumetra/sonic-rs.git", branch = "aw/fix-imports" }
