name: "Rust checks"

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check
    needs: fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: mtoohey31/cache-flake-attrs@v2
        with:
          key: ${{ runner.os }}-nix-${{ hashFiles('./flake.lock', './flake.nix') }}
      - uses: taiki-e/install-action@cargo-hack
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: rui314/setup-mold@v1
      - run: nix --extra-experimental-features nix-command --extra-experimental-features flakes develop -c cargo hack check --feature-powerset --all

  clippy:
    name: Clippy
    needs: [fmt, check]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: mtoohey31/cache-flake-attrs@v2
        with:
          key: ${{ runner.os }}-nix-${{ hashFiles('./flake.lock', './flake.nix') }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: rui314/setup-mold@v1
      - run: nix --extra-experimental-features nix-command --extra-experimental-features flakes develop -c cargo clippy --all-features -- -D warnings

  fmt:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: mtoohey31/cache-flake-attrs@v2
        with:
          key: ${{ runner.os }}-nix-${{ hashFiles('./flake.lock', './flake.nix') }}
      - run: nix --extra-experimental-features nix-command --extra-experimental-features flakes develop -c cargo fmt --all -- --check
  
  test:
    name: Test
    needs: [fmt, check]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: mtoohey31/cache-flake-attrs@v2
        with:
          key: ${{ runner.os }}-nix-${{ hashFiles('./flake.lock', './flake.nix') }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: rui314/setup-mold@v1
      - run: nix --extra-experimental-features nix-command --extra-experimental-features flakes develop -c cargo test --all-features -- --show-output
